(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("React"), require("cloudinary"));
	else if(typeof define === 'function' && define.amd)
		define("cloudinaryReact", ["React", "cloudinary"], factory);
	else if(typeof exports === 'object')
		exports["cloudinaryReact"] = factory(require("React"), require("cloudinary"));
	else
		root["cloudinaryReact"] = factory(root["React"], root["cloudinary"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_4__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Video = exports.Transformation = exports.Image = exports.CloudinaryContext = undefined;

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _CloudinaryContext = __webpack_require__(2);

	var _CloudinaryContext2 = _interopRequireDefault(_CloudinaryContext);

	var _Image = __webpack_require__(12);

	var _Image2 = _interopRequireDefault(_Image);

	var _Transformation = __webpack_require__(13);

	var _Transformation2 = _interopRequireDefault(_Transformation);

	var _Video = __webpack_require__(14);

	var _Video2 = _interopRequireDefault(_Video);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.CloudinaryContext = _CloudinaryContext2.default;
	exports.Image = _Image2.default;
	exports.Transformation = _Transformation2.default;
	exports.Video = _Video2.default;

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _CloudinaryComponent2 = __webpack_require__(3);

	var _CloudinaryComponent3 = _interopRequireDefault(_CloudinaryComponent2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Provides a container for Cloudinary components. Any option set in CloudinaryContext will be passed to the children.
	 * @example
	 *<CloudinaryContext cloudName="mycloud" dpr="auto">
	 *    <!-- other tags -->
	 *    <Image publicId={id}/>
	 *</CloudinaryContext>
	 *
	 */
	var CloudinaryContext = function (_CloudinaryComponent) {
	  _inherits(CloudinaryContext, _CloudinaryComponent);

	  function CloudinaryContext(props, context) {
	    _classCallCheck(this, CloudinaryContext);

	    var _this = _possibleConstructorReturn(this, (CloudinaryContext.__proto__ || Object.getPrototypeOf(CloudinaryContext)).call(this, props, context));

	    _this.state = {};
	    return _this;
	  }

	  _createClass(CloudinaryContext, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      var _this2 = this;

	      var context = {};
	      // only pass valid Cloudinary options
	      _CloudinaryComponent3.default.VALID_OPTIONS.forEach(function (key) {
	        var val = _this2.props[key] || _this2.context[key];
	        if (val !== undefined && val !== null) {
	          context[key] = val;
	        }
	      });
	      return context;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        this.props.children
	      );
	    }
	  }]);

	  return CloudinaryContext;
	}(_CloudinaryComponent3.default);

	CloudinaryContext.propTypes = _CloudinaryComponent3.default.propTypes;
	CloudinaryContext.defaultProps = {};
	CloudinaryContext.childContextTypes = _CloudinaryComponent3.default.contextTypes;

	exports.default = CloudinaryContext;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _cloudinaryCore = __webpack_require__(4);

	var _Util = __webpack_require__(5);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var camelCase = _cloudinaryCore.Util.camelCase;
	var snakeCase = _cloudinaryCore.Util.snakeCase;

	/**
	 * A base component for Cloudinary components.
	 * @protected
	 */

	var CloudinaryComponent = function (_Component) {
	  _inherits(CloudinaryComponent, _Component);

	  function CloudinaryComponent(props, context) {
	    _classCallCheck(this, CloudinaryComponent);

	    return _possibleConstructorReturn(this, (CloudinaryComponent.__proto__ || Object.getPrototypeOf(CloudinaryComponent)).call(this, props, context));
	  }

	  _createClass(CloudinaryComponent, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {};
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }, {
	    key: 'getChildTransformations',
	    value: function getChildTransformations(children) {
	      var _this2 = this;

	      if (children === undefined || children === null) return null;
	      var mapped = _react2.default.Children.map(children, function (child) {
	        var options = {};
	        if (child.type && child.type.name === "Transformation") {
	          options = CloudinaryComponent.normalizeOptions(child.props, child.context);
	        }
	        var childOptions = _this2.getChildTransformations(child.props.children);
	        if (childOptions !== undefined && childOptions !== null) {
	          options.transformation = childOptions;
	        }
	        return options;
	      });
	      if (mapped != null) {
	        return mapped.filter(function (o) {
	          return !_cloudinaryCore.Util.isEmpty(o);
	        });
	      } else return null;
	    }

	    /**
	     * Returns an object with all the transformation parameters based on the context and properties of this element
	     * and any children.
	     * @param options
	     * @returns {object} a hash of transformation and configuration parameters
	     * @protected
	     */

	  }, {
	    key: 'getTransformation',
	    value: function getTransformation(options) {
	      var transformation;
	      if (this.props.children !== undefined) {
	        var childrenOptions = this.getChildTransformations(this.props.children);
	        if (!_cloudinaryCore.Util.isEmpty(childrenOptions)) {
	          transformation = childrenOptions;
	          return _extends({}, options, { transformation: transformation });
	        }
	      }
	      return _extends({}, options);
	    }

	    /**
	     * Combine properties of all options to create an option Object that can be passed to Cloudinary methods.<br>
	     *   `undefined` and `null` values are filtered out.
	     * @protected
	     * @returns {Object}
	     * @param options one or more options objects
	     */

	  }, {
	    key: 'getUrl',


	    /**
	     * Generate a Cloudinary resource URL based on the options provided and child Transformation elements
	     * @param options
	     * @returns {string} a cloudinary URL
	     * @protected
	     */
	    value: function getUrl(options) {
	      var transformation = this.getTransformation(options);
	      var cl = _cloudinaryCore.Cloudinary.new(_cloudinaryCore.Util.withSnakeCaseKeys(options));
	      return cl.url(options.publicId, transformation);
	    }
	  }], [{
	    key: 'normalizeOptions',
	    value: function normalizeOptions() {
	      for (var _len = arguments.length, options = Array(_len), _key = 0; _key < _len; _key++) {
	        options[_key] = arguments[_key];
	      }

	      return options.reduce(function (left, right) {
	        for (var key in right) {
	          var value = right[key];
	          if (value !== null && value !== undefined) {
	            left[key] = value;
	          }
	        }
	        return left;
	      }, {});
	    }
	  }]);

	  return CloudinaryComponent;
	}(_react.Component);

	CloudinaryComponent.VALID_OPTIONS = _cloudinaryCore.Transformation.PARAM_NAMES.map(camelCase);
	CloudinaryComponent.contextTypes = typesFrom(CloudinaryComponent.VALID_OPTIONS);

	CloudinaryComponent.propTypes = CloudinaryComponent.contextTypes;
	CloudinaryComponent.propTypes.publicId = _react.PropTypes.string;
	CloudinaryComponent.propTypes.responsive = _react.PropTypes.bool;

	CloudinaryComponent.childContextTypes = {};

	/**
	 * Create a React type definition object. All items are PropTypes.string or [string] or object or [object].
	 * @param {Array} configParams a list of parameter names
	 * @returns {Object}
	 * @private
	 */
	function typesFrom(configParams) {
	  configParams = configParams || [];
	  var types = {};
	  for (var i = 0; i < configParams.length; i++) {
	    var key = configParams[i];
	    types[camelCase(key)] = _react.PropTypes.any;
	  }
	  return types;
	}

	exports.default = CloudinaryComponent;

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isElement = exports.equals = exports.cancelAnimationFrame = exports.requestAnimationFrame = exports.closestAbove = exports.firstDefined = exports.debounce = undefined;

	var _requestAnimationFrame = __webpack_require__(6);

	Object.defineProperty(exports, 'requestAnimationFrame', {
	  enumerable: true,
	  get: function get() {
	    return _requestAnimationFrame.requestAnimationFrame;
	  }
	});
	Object.defineProperty(exports, 'cancelAnimationFrame', {
	  enumerable: true,
	  get: function get() {
	    return _requestAnimationFrame.cancelAnimationFrame;
	  }
	});

	var _debounce2 = __webpack_require__(7);

	var _debounce3 = _interopRequireDefault(_debounce2);

	var _firstDefined2 = __webpack_require__(8);

	var _firstDefined3 = _interopRequireDefault(_firstDefined2);

	var _closestAbove2 = __webpack_require__(9);

	var _closestAbove3 = _interopRequireDefault(_closestAbove2);

	var _equals2 = __webpack_require__(10);

	var _equals3 = _interopRequireDefault(_equals2);

	var _isElement2 = __webpack_require__(11);

	var _isElement3 = _interopRequireDefault(_isElement2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.debounce = _debounce3.default;
	exports.firstDefined = _firstDefined3.default;
	exports.closestAbove = _closestAbove3.default;
	exports.equals = _equals3.default;
	exports.isElement = _isElement3.default;

/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// http://paulirish.com/2011/requestanimationframe-for-smart-animating/
	// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating
	// https://gist.github.com/paulirish/1579671
	// requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel

	// MIT license

	var lastTime = 0;
	var vendors = ['ms', 'moz', 'webkit', 'o'];
	var requestAnimationFrame;
	var cancelAnimationFrame;

	if (typeof window != "undefined") {
	  exports.requestAnimationFrame = requestAnimationFrame = window.requestAnimationFrame;
	  exports.cancelAnimationFrame = cancelAnimationFrame = window.cancelAnimationFrame;
	  for (var x = 0; x < vendors.length && !requestAnimationFrame; ++x) {
	    exports.requestAnimationFrame = requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
	    exports.cancelAnimationFrame = cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
	  }
	}
	if (!requestAnimationFrame) exports.requestAnimationFrame = requestAnimationFrame = function requestAnimationFrame(callback, element) {
	  var currTime = new Date().getTime();
	  var timeToCall = Math.max(0, 16 - (currTime - lastTime));
	  var id = setTimeout(function () {
	    callback(currTime + timeToCall);
	  }, timeToCall);
	  lastTime = currTime + timeToCall;
	  return id;
	};

	if (!cancelAnimationFrame) exports.cancelAnimationFrame = cancelAnimationFrame = function cancelAnimationFrame(id) {
	  clearTimeout(id);
	};

	exports.requestAnimationFrame = requestAnimationFrame;
	exports.cancelAnimationFrame = cancelAnimationFrame;

/***/ },
/* 7 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = debounce;
	/**
	 * Delay execution of func until wait milliseconds have passed since the last invocation of the returned debounced function.
	 * @param {function} func the function to execute
	 * @param {number} wait waiting time in milliseconds
	 * @param {boolean=false} immediate if true execute func at the beginning of the wait period
	 * @returns {function()} debounced function
	 * @protected
	 */
	function debounce(func, wait, immediate) {
	  var _this = this,
	      _arguments = arguments;

	  var timeout = null;
	  var debounced = function debounced() {
	    var context = _this;
	    var args = _arguments;
	    var callNow = immediate && !timeout;
	    if (timeout) {
	      clearTimeout(timeout);
	    }
	    var later = function later() {
	      timeout = null;
	      if (!immediate) {
	        func.apply(context, args);
	      }
	    };

	    timeout = setTimeout(later, wait);
	    if (callNow) {
	      func.apply(context, args);
	    }
	  };

	  debounced.cancel = function () {
	    clearTimeout(timeout);
	    timeout = null;
	  };
	  return debounced;
	}

/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = firstDefined;
	/**
	 * Returns the first argument that is not undefined
	 * @param {...*} values a list of arguments of any type
	 * @returns {*}
	 * @protected
	 */
	function firstDefined() {
	  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {
	    values[_key] = arguments[_key];
	  }

	  for (var i = 0; i < values.length; i++) {
	    if (values[i] !== undefined) return values[i];
	  }
	  return undefined;
	}

/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = closestAbove;
	/**
	 * Returns the first item in list that is greater or equal to the given value.
	 * @param {Array} list a sorted array of items
	 * @param {*} value
	 * @returns {*}
	 * @protected
	 */
	function closestAbove(list, value) {
	  return list.reduce(function (last, next) {
	    return value <= last ? last : next;
	  }, undefined);
	}

/***/ },
/* 10 */
/***/ function(module, exports) {

	/*
	 Source: https://github.com/ReactiveSets/toubkal

	 The MIT License (MIT)

	 Copyright (c) 2013-2016, Reactive Sets

	 Permission is hereby granted, free of charge, to any person obtaining a copy
	 of this software and associated documentation files (the "Software"), to deal
	 in the Software without restriction, including without limitation the rights
	 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 copies of the Software, and to permit persons to whom the Software is
	 furnished to do so, subject to the following conditions:

	 The above copyright notice and this permission notice shall be included in all
	 copies or substantial portions of the Software.

	 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	 SOFTWARE.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = equals;
	var toString = Object.prototype.toString;

	/* -----------------------------------------------------------------------------------------
	 equals( a, b [, enforce_properties_order, cyclic] )

	 Returns true if a and b are deeply equal, false otherwise.

	 Parameters:
	 - a (Any type): value to compare to b
	 - b (Any type): value compared to a

	 Optional Parameters:
	 - enforce_properties_order (Boolean): true to check if Object properties are provided
	 in the same order between a and b

	 - cyclic (Boolean): true to check for cycles in cyclic objects

	 Implementation:
	 'a' is considered equal to 'b' if all scalar values in a and b are strictly equal as
	 compared with operator '===' except for these two special cases:
	 - 0 === -0 but are not equal.
	 - NaN is not === to itself but is equal.

	 RegExp objects are considered equal if they have the same lastIndex, i.e. both regular
	 expressions have matched the same number of times.

	 Functions must be identical, so that they have the same closure context.

	 "undefined" is a valid value, including in Objects

	 106 automated tests.

	 Provide options for slower, less-common use cases:

	 - Unless enforce_properties_order is true, if 'a' and 'b' are non-Array Objects, the
	 order of occurence of their attributes is considered irrelevant:
	 { a: 1, b: 2 } is considered equal to { b: 2, a: 1 }

	 - Unless cyclic is true, Cyclic objects will throw:
	 RangeError: Maximum call stack size exceeded
	 */
	function equals(a, b, enforce_properties_order, cyclic) {
	  return a === b // strick equality should be enough unless zero
	  && a !== 0 // because 0 === -0, requires test by _equals()
	  || _equals(a, b) // handles not strictly equal or zero values
	  ;

	  function _equals(a, b) {
	    // a and b have already failed test for strict equality or are zero

	    var s, l, p, x, y;

	    // They should have the same toString() signature
	    if ((s = toString.call(a)) !== toString.call(b)) return false;

	    switch (s) {
	      default:
	        // Boolean, Date, String
	        return a.valueOf() === b.valueOf();

	      case '[object Number]':
	        // Converts Number instances into primitive values
	        // This is required also for NaN test bellow
	        a = +a;
	        b = +b;

	        return a ? // a is Non-zero and Non-NaN
	        a === b : // a is 0, -0 or NaN
	        a === a ? // a is 0 or -O
	        1 / a === 1 / b // 1/0 !== 1/-0 because Infinity !== -Infinity
	        : b !== b // NaN, the only Number not equal to itself!
	        ;
	      // [object Number]

	      case '[object RegExp]':
	        return a.source == b.source && a.global == b.global && a.ignoreCase == b.ignoreCase && a.multiline == b.multiline && a.lastIndex == b.lastIndex;
	      // [object RegExp]

	      case '[object Function]':
	        return false; // functions should be strictly equal because of closure context
	      // [object Function]

	      case '[object Array]':
	        if (cyclic && (x = reference_equals(a, b)) !== null) return x; // intentionally duplicated bellow for [object Object]

	        if ((l = a.length) != b.length) return false;
	        // Both have as many elements

	        while (l--) {
	          if ((x = a[l]) === (y = b[l]) && x !== 0 || _equals(x, y)) continue;

	          return false;
	        }

	        return true;
	      // [object Array]

	      case '[object Object]':
	        if (cyclic && (x = reference_equals(a, b)) !== null) return x; // intentionally duplicated from above for [object Array]

	        l = 0; // counter of own properties

	        if (enforce_properties_order) {
	          var properties = [];

	          for (p in a) {
	            if (a.hasOwnProperty(p)) {
	              properties.push(p);

	              if ((x = a[p]) === (y = b[p]) && x !== 0 || _equals(x, y)) continue;

	              return false;
	            }
	          }

	          // Check if 'b' has as the same properties as 'a' in the same order
	          for (p in b) {
	            if (b.hasOwnProperty(p) && properties[l++] != p) return false;
	          }
	        } else {
	          for (p in a) {
	            if (a.hasOwnProperty(p)) {
	              ++l;

	              if ((x = a[p]) === (y = b[p]) && x !== 0 || _equals(x, y)) continue;

	              return false;
	            }
	          }

	          // Check if 'b' has as not more own properties than 'a'
	          for (p in b) {
	            if (b.hasOwnProperty(p) && --l < 0) return false;
	          }
	        }

	        return true;
	      // [object Object]
	    } // switch toString.call( a )
	  } // _equals()

	  /* -----------------------------------------------------------------------------------------
	   reference_equals( a, b )
	    Helper function to compare object references on cyclic objects or arrays.
	    Returns:
	   - null if a or b is not part of a cycle, adding them to object_references array
	   - true: same cycle found for a and b
	   - false: different cycle found for a and b
	    On the first call of a specific invocation of equal(), replaces self with inner function
	   holding object_references array object in closure context.
	    This allows to create a context only if and when an invocation of equal() compares
	   objects or arrays.
	   */
	  function reference_equals(a, b) {
	    var object_references = [];

	    return (reference_equals = _reference_equals)(a, b);

	    function _reference_equals(a, b) {
	      var l = object_references.length;

	      while (l--) {
	        if (object_references[l--] === b) return object_references[l] === a;
	      }object_references.push(a, b);

	      return null;
	    } // _reference_equals()
	  } // reference_equals()
	} // equals()

/***/ },
/* 11 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.default = isElement;
	// Originally from lodash

	/**
	 * Checks if `value` is a DOM element.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
	 * @protected
	 * @example
	 *
	 * _.isElement(document.body);
	 * // => true
	 *
	 * _.isElement('<body>');
	 * // => false
	 */
	function isElement(value) {
	  return value != null && value.nodeType === 1 && isObjectLike(value);
	}

	function isObjectLike(value) {
	  return value != null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object';
	}

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _cloudinaryCore = __webpack_require__(4);

	var _cloudinaryCore2 = _interopRequireDefault(_cloudinaryCore);

	var _CloudinaryComponent2 = __webpack_require__(3);

	var _CloudinaryComponent3 = _interopRequireDefault(_CloudinaryComponent2);

	var _Util = __webpack_require__(5);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * A component representing a Cloudinary served image
	 */
	var Image = function (_CloudinaryComponent) {
	  _inherits(Image, _CloudinaryComponent);

	  function Image(props, context) {
	    _classCallCheck(this, Image);

	    function defaultBreakpoints(width) {
	      var steps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;

	      return steps * Math.ceil(width / steps);
	    }

	    var _this = _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).call(this, props, context));

	    _this.handleResize = _this.handleResize.bind(_this);

	    var state = { responsive: false, url: "", breakpoints: defaultBreakpoints };
	    _this.state = Object.assign(state, _this.prepareState(props, context));
	    return _this;
	  }

	  /**
	   * Retrieve the window or default view of the current element
	   * @returns {DocumentView|*}
	   * @private
	   */


	  _createClass(Image, [{
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      return !((0, _Util.equals)(this.props, nextProps) && (0, _Util.equals)(this.state, nextState));
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps, nextContext) {
	      var state = this.prepareState(nextProps, nextContext);
	      this.setState(state);
	    }

	    /**
	     * Generate update state of this element
	     * @param {Object} [props=this.props]
	     * @param {Object} [context=this.context]
	     * @returns {Object} state updates
	     * @private
	     */

	  }, {
	    key: 'prepareState',
	    value: function prepareState() {
	      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
	      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;

	      var options = _CloudinaryComponent3.default.normalizeOptions(context, props);
	      var url = this.getUrl(options);
	      var state = {};
	      if (options.breakpoints !== undefined) {
	        state.breakpoints = options.breakpoints;
	      }
	      if (options.responsive) {
	        state.responsive = true;
	        url = this.cloudinary_update(url, state);
	      }

	      var currentState = this.state || {};
	      if (!_cloudinaryCore.Util.isEmpty(url) && url !== currentState.url) {
	        state.url = url;
	      }
	      return state;
	    }
	  }, {
	    key: 'handleResize',
	    value: function handleResize(e) {
	      var _this2 = this;

	      if (this.rqf) return;
	      this.rqf = (0, _Util.requestAnimationFrame)(function () {
	        _this2.rqf = null;
	        var newState = _this2.prepareState();
	        if (!_cloudinaryCore.Util.isEmpty(newState.url)) {
	          _this2.setState(newState);
	        }
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      // now that we have a this.element, we need to calculate the URL
	      this.handleResize();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.element = undefined;
	      if (this.listener) {
	        this.listener.cancel();
	        this.window && this.window.removeEventListener('resize', this.listener);
	      }
	      this.listener = undefined;
	    }
	  }, {
	    key: 'componentWillUpdate',
	    value: function componentWillUpdate(nextProps, nextState, nextContext) {
	      if (nextState.responsive) {
	        var wait = (0, _Util.firstDefined)(nextProps.responsiveDebounce, nextContext.responsiveDebounce, 100);
	        if (this.listener) {
	          this.window && this.window.removeEventListener('resize', this.listener);
	        }
	        this.listener = (0, _Util.debounce)(this.handleResize, wait);
	        this.window && this.window.addEventListener('resize', this.listener);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this3 = this;

	      var _CloudinaryComponent$ = _CloudinaryComponent3.default.normalizeOptions(this.props, this.context),
	          publicId = _CloudinaryComponent$.publicId,
	          responsive = _CloudinaryComponent$.responsive,
	          responsiveDebounce = _CloudinaryComponent$.responsiveDebounce,
	          children = _CloudinaryComponent$.children,
	          options = _objectWithoutProperties(_CloudinaryComponent$, ['publicId', 'responsive', 'responsiveDebounce', 'children']);

	      var attributes = _cloudinaryCore2.default.Transformation.new(options).toHtmlAttributes();
	      return _react2.default.createElement('img', _extends({}, attributes, { src: this.state.url, ref: function ref(e) {
	          _this3.element = e;
	        } }));
	    }

	    // Methods from cloudinary_js

	  }, {
	    key: 'findContainerWidth',
	    value: function findContainerWidth() {
	      var containerWidth, style;
	      containerWidth = 0;
	      var element = this.element;
	      while ((0, _Util.isElement)(element = element != null ? element.parentNode : void 0) && !containerWidth) {
	        style = this.window ? this.window.getComputedStyle(element) : '';
	        if (!/^inline/.test(style.display)) {
	          containerWidth = _cloudinaryCore.Util.width(element);
	        }
	      }
	      return containerWidth;
	    }
	  }, {
	    key: 'applyBreakpoints',
	    value: function applyBreakpoints(width, steps, options) {
	      var responsive_use_breakpoints;
	      options = _CloudinaryComponent3.default.normalizeOptions(this.context, this.props, options);
	      responsive_use_breakpoints = options.responsiveUseBreakpoints;
	      if (!responsive_use_breakpoints || responsive_use_breakpoints === 'resize' && !options.resizing) {
	        return width;
	      } else {
	        return this.calc_breakpoint(width, steps);
	      }
	    }
	  }, {
	    key: 'calc_breakpoint',
	    value: function calc_breakpoint(width, steps) {
	      var breakpoints, point;
	      breakpoints = this.state.breakpoints || defaultBreakpoints;
	      if (_cloudinaryCore.Util.isFunction(breakpoints)) {
	        return breakpoints(width, steps);
	      } else {
	        if (_cloudinaryCore.Util.isString(breakpoints)) {
	          breakpoints = function () {
	            var j, len, ref, results;
	            ref = breakpoints.split(',');
	            results = [];
	            for (j = 0, len = ref.length; j < len; j++) {
	              point = ref[j];
	              results.push(parseInt(point));
	            }
	            return results;
	          }().sort(function (a, b) {
	            return a - b;
	          });
	        }
	        return (0, _Util.closestAbove)(breakpoints, width);
	      }
	    }
	  }, {
	    key: 'device_pixel_ratio',
	    value: function device_pixel_ratio() {
	      var roundDpr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

	      var dpr, dprString;
	      dpr = (typeof this.window !== "undefined" && this.window !== null ? this.window.devicePixelRatio : void 0) || 1;
	      if (roundDpr) {
	        dpr = Math.ceil(dpr);
	      }
	      if (dpr <= 0 || isNaN(dpr)) {
	        dpr = 1;
	      }
	      dprString = dpr.toString();
	      if (dprString.match(/^\d+$/)) {
	        dprString += '.0';
	      }
	      return dprString;
	    }
	  }, {
	    key: 'updateDpr',
	    value: function updateDpr(dataSrc, roundDpr) {
	      return dataSrc.replace(/\bdpr_(1\.0|auto)\b/g, 'dpr_' + this.device_pixel_ratio(roundDpr));
	    }
	  }, {
	    key: 'maxWidth',
	    value: function maxWidth(requiredWidth) {
	      var imageWidth;
	      imageWidth = this.state.width || 0;
	      if (requiredWidth > imageWidth) {
	        imageWidth = requiredWidth;
	        this.setState({ width: requiredWidth });
	      }
	      return imageWidth;
	    }
	  }, {
	    key: 'cloudinary_update',
	    value: function cloudinary_update(url) {
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	      var requiredWidth;
	      var match;
	      var resultUrl = this.updateDpr(url, options.roundDpr);
	      if (options.responsive || this.state && this.state.responsive) {
	        var containerWidth = this.findContainerWidth();
	        if (containerWidth !== 0) {
	          if (/w_auto:breakpoints/.test(resultUrl)) {
	            requiredWidth = this.maxWidth(containerWidth, this.element);
	            resultUrl = resultUrl.replace(/w_auto:breakpoints([_0-9]*)(:[0-9]+)?/, "w_auto:breakpoints$1:" + requiredWidth);
	          } else if (match = /w_auto(:(\d+))?/.exec(resultUrl)) {
	            requiredWidth = this.applyBreakpoints(containerWidth, match[2], options);
	            requiredWidth = this.maxWidth(requiredWidth, this.element);
	            resultUrl = resultUrl.replace(/w_auto[^,\/]*/g, "w_" + requiredWidth);
	          }
	        } else {
	          resultUrl = "";
	        }
	      }
	      return resultUrl;
	    }
	  }, {
	    key: 'window',
	    get: function get() {
	      var windowRef = null;
	      if (typeof window !== "undefined") {
	        windowRef = window;
	      }
	      return this.element && this.element.ownerDocument ? this.element.ownerDocument.defaultView || windowRef : windowRef;
	    }
	  }]);

	  return Image;
	}(_CloudinaryComponent3.default);

	Image.defaultProps = {};
	Image.contextTypes = _CloudinaryComponent3.default.contextTypes;
	Image.propTypes = _CloudinaryComponent3.default.propTypes;

	exports.default = Image;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _CloudinaryComponent2 = __webpack_require__(3);

	var _CloudinaryComponent3 = _interopRequireDefault(_CloudinaryComponent2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Define a transformation that is applied to the parent tag.
	 */
	var Transformation = function (_CloudinaryComponent) {
	  _inherits(Transformation, _CloudinaryComponent);

	  function Transformation(props) {
	    _classCallCheck(this, Transformation);

	    return _possibleConstructorReturn(this, (Transformation.__proto__ || Object.getPrototypeOf(Transformation)).call(this, props));
	  }

	  _createClass(Transformation, [{
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }]);

	  return Transformation;
	}(_CloudinaryComponent3.default);

	Transformation.propTypes = _CloudinaryComponent3.default.propTypes;
	Transformation.defaultProps = {};
	Transformation.contextTypes = {};

	exports.default = Transformation;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _cloudinaryCore = __webpack_require__(4);

	var _CloudinaryComponent2 = __webpack_require__(3);

	var _CloudinaryComponent3 = _interopRequireDefault(_CloudinaryComponent2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DEFAULT_POSTER_OPTIONS = {
	  format: 'jpg',
	  resource_type: 'video'
	};

	/**
	 * A component representing a Cloudinary served video
	 */

	var Video = function (_CloudinaryComponent) {
	  _inherits(Video, _CloudinaryComponent);

	  function Video(props) {
	    _classCallCheck(this, Video);

	    var _this = _possibleConstructorReturn(this, (Video.__proto__ || Object.getPrototypeOf(Video)).call(this, props));

	    _this.state = {};
	    return _this;
	  }

	  _createClass(Video, [{
	    key: 'render',
	    value: function render() {
	      var _Object$assign = Object.assign({}, this.context, this.props),
	          publicId = _Object$assign.publicId,
	          poster = _Object$assign.poster,
	          sourceTypes = _Object$assign.sourceTypes,
	          fallback = _Object$assign.fallback,
	          sourceTransformation = _Object$assign.sourceTransformation,
	          options = _objectWithoutProperties(_Object$assign, ['publicId', 'poster', 'sourceTypes', 'fallback', 'sourceTransformation']);

	      sourceTransformation = sourceTransformation || {};
	      sourceTypes = sourceTypes || _cloudinaryCore.Cloudinary.DEFAULT_VIDEO_PARAMS.source_types;
	      options = _CloudinaryComponent3.default.normalizeOptions(options, {});
	      var cld = _cloudinaryCore.Cloudinary.new(_cloudinaryCore.Util.withSnakeCaseKeys(options));
	      var sources = [];
	      var tagAttributes = _cloudinaryCore.Transformation.new(options).toHtmlAttributes();
	      if (_cloudinaryCore.Util.isPlainObject(poster)) {
	        var defaults = poster.publicId !== undefined && poster.publicId !== null ? _cloudinaryCore.Cloudinary.DEFAULT_IMAGE_PARAMS : DEFAULT_POSTER_OPTIONS;
	        poster = cld.url(poster.publicId || publicId, _cloudinaryCore.Util.defaults({}, _cloudinaryCore.Util.withSnakeCaseKeys(poster), defaults));
	      }
	      if (!_cloudinaryCore.Util.isEmpty(poster)) {
	        tagAttributes.poster = poster;
	      }
	      if (!_cloudinaryCore.Util.isEmpty(this.state.poster)) {
	        tagAttributes.poster = this.state.poster;
	      }

	      if (_cloudinaryCore.Util.isArray(sourceTypes)) {
	        sources = sourceTypes.map(function (srcType) {
	          var transformation = sourceTransformation[srcType] || {};
	          var src = cld.url(publicId, _cloudinaryCore.Util.defaults({}, transformation, { resource_type: 'video', format: srcType }));
	          var mimeType = 'video/' + (srcType === 'ogv' ? 'ogg' : srcType);
	          return _react2.default.createElement('source', { key: mimeType, src: src, type: mimeType });
	        });
	      } else {
	        tagAttributes["src"] = cld.url(publicId, { resource_type: 'video', format: sourceTypes });
	      }
	      return _react2.default.createElement(
	        'video',
	        tagAttributes,
	        sources,
	        fallback,
	        this.props.children
	      );
	    }
	  }]);

	  return Video;
	}(_CloudinaryComponent3.default);

	Video.propTypes = { publicId: _react.PropTypes.string };
	Video.defaultProps = {};
	Video.contextTypes = _CloudinaryComponent3.default.contextTypes;

	exports.default = Video;

/***/ }
/******/ ])
});
;